CMD_NAMES = [
    "???",
    "load.pri",
    "load.alt",
    "load.s.pri",
    "load.s.alt",
    "lref.pri",
    "lref.alt",
    "lref.s.pri",
    "lref.s.alt",
    "load.i",
    "lodb.i",
    "const.pri",
    "const.alt",
    "addr.pri",
    "addr.alt",
    "stor.pri",
    "stor.alt",
    "stor.s.pri",
    "stor.s.alt",
    "sref.pri",
    "sref.alt",
    "sref.s.pri",
    "sref.s.alt",
    "stor.i",
    "strb.i",
    "lidx",
    "lidx.b",
    "idxaddr",
    "idxaddr.b",
    "align.pri",
    "align.alt",
    "lctrl",
    "sctrl",
    "move.pri",
    "move.alt",
    "xchg",
    "push.pri",
    "push.alt",
    "pick",
    "push.c",
    "push",
    "push.s",
    "pop.pri",
    "pop.alt",
    "stack",
    "heap",
    "proc",
    "ret",
    "retn",
    "call",
    "call.pri",
    "jump",
    "jrel",
    "jzer",
    "jnz",
    "jeq",
    "jneq",
    "jless",
    "jleq",
    "jgrtr",
    "jgeq",
    "jsless",
    "jsleq",
    "jsgrtr",
    "jsgeq",
    "shl",
    "shr",
    "sshr",
    "shl.c.pri",
    "shl.c.alt",
    "shr.c.pri",
    "shr.c.alt",
    "smul",
    "sdiv",
    "sdiv.alt",
    "umul",
    "udiv",
    "udiv.alt",
    "add",
    "sub",
    "sub.alt",
    "and",
    "or",
    "xor",
    "not",
    "neg",
    "invert",
    "add.c",
    "smul.c",
    "zero.pri",
    "zero.alt",
    "zero",
    "zero.s",
    "sign.pri",
    "sign.alt",
    "eq",
    "neq",
    "less",
    "leq",
    "grtr",
    "geq",
    "sless",
    "sleq",
    "sgrtr",
    "sgeq",
    "eq.c.pri",
    "eq.c.alt",
    "inc.pri",
    "inc.alt",
    "inc",
    "inc.s",
    "inc.i",
    "dec.pri",
    "dec.alt",
    "dec",
    "dec.s",
    "dec.i",
    "movs",
    "cmps",
    "fill",
    "halt",
    "bounds",
    "sysreq.pri",
    "sysreq.c",
    "pushr.pri",
    "pushr.c",
    "pushr.s",
    "pushr.adr",
    "jump.pri",
    "switch",
    "casetbl",
    "swap.pri",
    "swap.alt",
    "push.adr",
    "nop",
    "sysreq.n",
    "symtag",
    "break",
    "push2.c",
    "push2",
    "push2.s",
    "push2.adr",
    "push3.c",
    "push3",
    "push3.s",
    "push3.adr",
    "push4.c",
    "push4",
    "push4.s",
    "push4.adr",
    "push5.c",
    "push5",
    "push5.s",
    "push5.adr",
    "load.both",
    "load.s.both",
    "const",
    "const.s",
    "icall",
    "iretn",
    "iswitch",
    "icasetbl",
    "load.p.pri",
    "load.p.alt",
    "load.p.s.pri",
    "load.p.s.alt",
    "lref.p.pri",
    "lref.p.alt",
    "lref.p.s.pri",
    "lref.p.s.alt",
    "lodb.p.i",
    "const.p.pri",
    "const.p.alt",
    "addr.p.pri",
    "addr.p.alt",
    "stor.p.pri",
    "stor.p.alt",
    "stor.p.s.pri",
    "stor.p.s.alt",
    "sref.p.pri",
    "sref.p.alt",
    "sref.p.s.pri",
    "sref.p.s.alt",
    "strb.p.i",
    "lidx.p.b",
    "idxaddr.p.b",
    "align.p.pri",
    "align.p.alt",
    "push.p.c",
    "push.p",
    "push.p.s",
    "stack.p",
    "heap.p",
    "shl.p.c.pri",
    "shl.p.c.alt",
    "shr.p.c.pri",
    "shr.p.c.alt",
    "add.p.c",
    "smul.p.c",
    "zero.p",
    "zero.p.s",
    "eq.p.c.pri",
    "eq.p.c.alt",
    "inc.p",
    "inc.p.s",
    "dec.p",
    "dec.p.s",
    "movs.p",
    "cmps.p",
    "fill.p",
    "halt.p",
    "bounds.p",
    "push.p.adr",
    "pushr.p.c",
    "pushr.p.s",
    "pushr.p.adr",
]

PARAM_TYPES = [
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "CALL",  
    "VALUE", 
    "JUMP",  
    "VALUE", 
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "JUMP",  
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "SWITCH",
    "CASETBL",
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "VALUE", 
    "SWITCH",
    "ICASETB",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
    "PACKED",
]

CMD_NAMES_FMTTED = [
    "CMD_UNKNOWN",
    "CMD_LOAD_PRI",  
    "CMD_LOAD_ALT",  
    "CMD_LOAD_S_PRI",
    "CMD_LOAD_S_ALT",
    "CMD_LREF_PRI",  
    "CMD_LREF_ALT",  
    "CMD_LREF_S_PRI",
    "CMD_LREF_S_ALT",
    "CMD_LOAD_I",    
    "CMD_LODB_I",    
    "CMD_CONST_PRI", 
    "CMD_CONST_ALT", 
    "CMD_ADDR_PRI",  
    "CMD_ADDR_ALT",  
    "CMD_STOR_PRI",  
    "CMD_STOR_ALT",  
    "CMD_STOR_S_PRI",
    "CMD_STOR_S_ALT",
    "CMD_SREF_PRI",  
    "CMD_SREF_ALT",  
    "CMD_SREF_S_PRI",
    "CMD_SREF_S_ALT",
    "CMD_STOR_I",    
    "CMD_STRB_I",    
    "CMD_LIDX",      
    "CMD_LIDX_B",    
    "CMD_IDXADDR",   
    "CMD_IDXADDR_B", 
    "CMD_ALIGN_PRI", 
    "CMD_ALIGN_ALT", 
    "CMD_LCTRL",     
    "CMD_SCTRL",     
    "CMD_MOVE_PRI",  
    "CMD_MOVE_ALT",  
    "CMD_XCHG",      
    "CMD_PUSH_PRI",  
    "CMD_PUSH_ALT",  
    "CMD_PICK",      
    "CMD_PUSH_C",    
    "CMD_PUSH",      
    "CMD_PUSH_S",    
    "CMD_POP_PRI",   
    "CMD_POP_ALT",   
    "CMD_STACK",     
    "CMD_HEAP",      
    "CMD_PROC",
    "CMD_RET",       
    "CMD_RETN",      
    "CMD_CALL",      
    "CMD_CALL_PRI",  
    "CMD_JUMP",      
    "CMD_JREL",      
    "CMD_JZER",      
    "CMD_JNZ",       
    "CMD_JEQ",       
    "CMD_JNEQ",      
    "CMD_JLESS",     
    "CMD_JLEQ",      
    "CMD_JGRTR",     
    "CMD_JGEQ",      
    "CMD_JSLESS",    
    "CMD_JSLEQ",     
    "CMD_JSGRTR",    
    "CMD_JSGEQ",     
    "CMD_SHL",       
    "CMD_SHR",       
    "CMD_SSHR",      
    "CMD_SHL_C_PRI", 
    "CMD_SHL_C_ALT", 
    "CMD_SHR_C_PRI", 
    "CMD_SHR_C_ALT", 
    "CMD_SMUL",      
    "CMD_SDIV",      
    "CMD_SDIV_ALT",  
    "CMD_UMUL",      
    "CMD_UDIV",      
    "CMD_UDIV_ALT",  
    "CMD_ADD",       
    "CMD_SUB",       
    "CMD_SUB_ALT",   
    "CMD_AND",       
    "CMD_OR",        
    "CMD_XOR",       
    "CMD_NOT",       
    "CMD_NEG",       
    "CMD_INVERT",    
    "CMD_ADD_C",     
    "CMD_SMUL_C",    
    "CMD_ZERO_PRI",  
    "CMD_ZERO_ALT",  
    "CMD_ZERO",      
    "CMD_ZERO_S",    
    "CMD_SIGN_PRI",  
    "CMD_SIGN_ALT",  
    "CMD_EQ",        
    "CMD_NEQ",       
    "CMD_LESS",      
    "CMD_LEQ",       
    "CMD_GRTR",      
    "CMD_GEQ",       
    "CMD_SLESS",     
    "CMD_SLEQ",      
    "CMD_SGRTR",     
    "CMD_SGEQ",      
    "CMD_EQ_C_PRI",  
    "CMD_EQ_C_ALT",  
    "CMD_INC_PRI",   
    "CMD_INC_ALT",   
    "CMD_INC",       
    "CMD_INC_S",     
    "CMD_INC_I",     
    "CMD_DEC_PRI",   
    "CMD_DEC_ALT",   
    "CMD_DEC",       
    "CMD_DEC_S",     
    "CMD_DEC_I",     
    "CMD_MOVS",      
    "CMD_CMPS",      
    "CMD_FILL",      
    "CMD_HALT",      
    "CMD_BOUNDS",    
    "CMD_SYSREQ_PRI",
    "CMD_SYSREQ_C",  
    "CMD_PUSHR_PRI", 
    "CMD_PUSHR_C",   
    "CMD_PUSHR_S",   
    "CMD_PUSHR_ADR", 
    "CMD_JUMP_PRI",  
    "CMD_SWITCH",    
    "CMD_CASETBL",
    "CMD_SWAP_PRI",  
    "CMD_SWAP_ALT",  
    "CMD_PUSH_ADR",  
    "CMD_NOP",       
    "CMD_SYSREQ_N",  
    "CMD_SYMTAG",    
    "CMD_BREAK",     
    "CMD_PUSH2_C",   
    "CMD_PUSH2",     
    "CMD_PUSH2_S",   
    "CMD_PUSH2_ADR", 
    "CMD_PUSH3_C",   
    "CMD_PUSH3",     
    "CMD_PUSH3_S",   
    "CMD_PUSH3_ADR", 
    "CMD_PUSH4_C",   
    "CMD_PUSH4",     
    "CMD_PUSH4_S",   
    "CMD_PUSH4_ADR", 
    "CMD_PUSH5_C",   
    "CMD_PUSH5",     
    "CMD_PUSH5_S",   
    "CMD_PUSH5_ADR", 
    "CMD_LOAD_BOTH", 
    "CMD_LOAD_S_BOTH",
    "CMD_CONST",     
    "CMD_CONST_S",   
    "CMD_ICALL",     
    "CMD_IRETN",     
    "CMD_ISWITCH",   
    "CMD_ICASETBL",
    "CMD_LOAD_P_PRI",
    "CMD_LOAD_P_ALT",
    "CMD_LOAD_P_S_PRI",
    "CMD_LOAD_P_S_ALT",
    "CMD_LREF_P_PRI",
    "CMD_LREF_P_ALT",
    "CMD_LREF_P_S_PRI",
    "CMD_LREF_P_S_ALT",
    "CMD_LODB_P_I",  
    "CMD_CONST_P_PRI",
    "CMD_CONST_P_ALT",
    "CMD_ADDR_P_PRI",
    "CMD_ADDR_P_ALT",
    "CMD_STOR_P_PRI",
    "CMD_STOR_P_ALT",
    "CMD_STOR_P_S_PRI",
    "CMD_STOR_P_S_ALT",
    "CMD_SREF_P_PRI",
    "CMD_SREF_P_ALT",
    "CMD_SREF_P_S_PRI",
    "CMD_SREF_P_S_ALT",
    "CMD_STRB_P_I",  
    "CMD_LIDX_P_B",  
    "CMD_IDXADDR_P_B",
    "CMD_ALIGN_P_PRI",
    "CMD_ALIGN_P_ALT",
    "CMD_PUSH_P_C",  
    "CMD_PUSH_P",    
    "CMD_PUSH_P_S",  
    "CMD_STACK_P",   
    "CMD_HEAP_P",    
    "CMD_SHL_P_C_PRI",
    "CMD_SHL_P_C_ALT",
    "CMD_SHR_P_C_PRI",
    "CMD_SHR_P_C_ALT",
    "CMD_ADD_P_C",   
    "CMD_SMUL_P_C",  
    "CMD_ZERO_P",    
    "CMD_ZERO_P_S",  
    "CMD_EQ_P_C_PRI",
    "CMD_EQ_P_C_ALT",
    "CMD_INC_P",     
    "CMD_INC_P_S",   
    "CMD_DEC_P",     
    "CMD_DEC_P_S",   
    "CMD_MOVS_P",    
    "CMD_CMPS_P",    
    "CMD_FILL_P",    
    "CMD_HALT_P",    
    "CMD_BOUNDS_P",  
    "CMD_PUSH_P_ADR",
    "CMD_PUSHR_P_C", 
    "CMD_PUSHR_P_S", 
    "CMD_PUSHR_P_ADR"
]

PARAM_CNTS = [
    0,
1,
1,
1,
1,
1,
1,
1,
1,
0,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
0,
1,
0,
1,
0,
1,
1,
1,
1,
1,
0,
0,
0,
0,
0,
1,
1,
1,
1,
0,
0,
1,
1,
0,
0,
0,
1,
0,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
0,
0,
0,
1,
1,
1,
1,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
1,
1,
0,
0,
1,
1,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
1,
1,
0,
0,
1,
1,
0,
0,
0,
1,
1,
0,
1,
1,
1,
1,
1,
0,
1,
0,
1,
1,
1,
0,
1,
1,
0,
0,
1,
0,
2,
1,
0,
2,
2,
2,
2,
3,
3,
3,
3,
4,
4,
4,
4,
5,
5,
5,
5,
2,
2,
2,
2,
1,
0,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
]

with open('cmdlist.cpp', 'w') as SRC:
    for x in range(len(CMD_NAMES_FMTTED)):
        CMD_NAMES_FMTTED[x]
        CMD_NAMES[x]
        PARAM_TYPES[x]
        PARAM_CNTS[x]
        SRC.write(f'new Command({CMD_NAMES_FMTTED[x]}, "{CMD_NAMES[x]}", {{{[PARAM_TYPES[x] for k in range(PARAM_CNTS[x])]}}}), // {CMD_NAMES_FMTTED[x]}\n')